#!/bin/bash
###################################################################################################
#
#############         SIMPLE VPS - WEB SERVICE by TheReBoys Copyright @ VPSSIM.COM     ############
#
###################################################################################################
ranus=`date |md5sum |cut -c '1-3'`
checktruenumber='^[0-9]+$'
moduledir=/usr/local/vpssim
opensslversion=openssl-1.0.2l
zlibversion=zlib-1.2.11
kiemtraemail3="^(([-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~])+\.)*[-a-zA-Z0-9\!#\$%\&\'*+/=?^_\`{\|}~]+@\w((-|\w)*\w)*\.(\w((-|\w)*\w)*\.)*\w{2,24}$";
svip=$(wget http://ipecho.net/plain -O - -q ; echo)
###################################################################################################
###################################################################################################
echo "=========================================================================="
echo "Default Penyiapan VPSSIM  PHP 7.1 untuk server. Ubah versi PHP dengan menggunakan  "
echo "--------------------------------------------------------------------------"
echo "function: [ Change PHP Version ] in [ Update System ] on VPSSIM Menu. "
echo "--------------------------------------------------------------------------"
echo "PHP Versions support: 7.2, 7.1, 7.0, 5.6, 5.5 & 5.4"
echo "--------------------------------------------------------------------------"
echo "MariaDB Versions support: 10.2, 10.1 & 10.0"
cpuname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cpucores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
cpufreq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
svram=$( free -m | awk 'NR==2 {print $2}' )
svhdd=$( df -h | awk 'NR==2 {print $2}' )
svswap=$( free -m | awk 'NR==4 {print $2}' )
echo "=========================================================================="
echo "Parameter Server:  "
echo "--------------------------------------------------------------------------"
echo "Tipe server: $(virt-what | awk 'NR==1 {print $NF}')"
echo "CPU Type: $cpuname"
echo "CPU Core: $cpucores"
echo "CPU Speed: $cpufreq MHz"
echo "Memory: $svram MB"
echo "Disk: $svhdd"
echo "IP: $svip"
echo "=========================================================================="
echo "Isi Informasi Anda: "
echo "--------------------------------------------------------------------------"
echo -n "Ketik Port Phpmyadmin [ENTER]: " 
read svport
if [ "$svport" = "443" ] || [ "$svport" = "3306" ] || [ "$svport" = "465" ] || [ "$svport" = "587" ]; then
	svport="2313"
echo "Port PhpMyAdmin tidak bisa bertepatan dengan layanan port lainnya"
echo "vpssim akan menetapkan port PMA yaitu 2313"
fi
if [ "$svport" = "" ] ; then
clear
    
 echo -e "****************** PORT PHPMYADMIN TIDAK BISA DIJELASKAN ! ******************"
bash /root/vpssim-setup
exit
fi
if ! [[ $svport -ge 100 && $svport -le 65535  ]] ; then  
clear
echo "=========================================================================="
echo "$svport salah!"
echo "--------------------------------------------------------------------------"
echo "Port harus berupa angka di dalam jangkauan (100 - 65535)."
echo "--------------------------------------------------------------------------"
echo "Silahkan coba lagi" 
echo "-------------------------------------------------------------------------"
read -p "Tekan [Enter] Untuk Melanjutkan  ..."
clear
bash /root/vpssim-setup
exit
fi 
echo "--------------------------------------------------------------------------"
echo -n "Ketikan Email Anda [ENTER]: " 
read vpssimemail
if [ "$vpssimemail" = "" ]; then
clear
echo "=========================================================================="
echo "Anda salah mengetik. Silahkan coba lagi"
echo "-------------------------------------------------------------------------"
read -p "Ketik [Enter] Untuk Melanjutkan  ..."
clear
bash /root/vpssim-setup
exit
fi

if [[ ! "$vpssimemail" =~ $kiemtraemail3 ]]; then
clear
echo "=========================================================================="
echo "$vpssimemail mungkin email yang salah"
echo "--------------------------------------------------------------------------"
echo "Silahkan coba lagi"
echo "-------------------------------------------------------------------------"
read -p "Ketik [Enter] Untuk Melanjutkan  ..."
clear
bash /root/vpssim-setup
exit
fi

echo "-------------------------------------------------------------------------"
echo "Password untuk root MySQL harus minimal 8 karakter. "
echo "-------------------------------------------------------------------------"
echo -n "Ketik password untuk root MySQL [ENTER]: " 
read passrootmysql
if [[ ! ${#passrootmysql} -ge 8 ]]; then
clear
echo "========================================================================="
echo "Password untuk root MySQL harus minimal 8 karakter. "
echo "-------------------------------------------------------------------------"
echo "Silahkan coba lagi"
echo "-------------------------------------------------------------------------"
read -p "Ketik [Enter] Untuk Melanjutkan  ..."
clear
bash /root/vpssim-setup
exit
fi  

checkpass="^[a-zA-Z0-9_][-a-zA-Z0-9_]{0,61}[a-zA-Z0-9_]$";
if [[ ! "$passrootmysql" =~ $checkpass ]]; then
clear
echo "========================================================================="
echo "Anda hanya harus menggunakan angka, huruf untuk mengatur kata sandi!"
echo "-------------------------------------------------------------------------"
echo "Silahkan coba lagi"
echo "-------------------------------------------------------------------------"
read -p "Ketik [Enter] Untuk Melanjutkan  ..."
clear
bash /root/vpssim-setup
exit
fi  
echo "$passrootmysql" > /tmp/passrootmysql

prompt="Ketik pilihan Anda: "
options=( "MariaDB 10.2 " "MariaDB 10.1" "MariaDB 10.0")
echo "=========================================================================="
echo "Pilih MariaDB Version "
echo "=========================================================================="
PS3="$prompt"
select opt in "${options[@]}"; do 

    case "$REPLY" in
    1) mariadbversion="10.2"; break;;
    2) mariadbversion="10.1"; break;;
    3) mariadbversion="10.0"; break;;
            
    *) echo "Anda salah mengetik, ketik nomor ordinal di daftar";continue;;
    esac  
done
if [ "$mariadbversion" = "10.0" ]; then
phienbanmariadb=10.0
elif [ "$mariadbversion" = "10.1" ]; then
phienbanmariadb=10.1
else
phienbanmariadb=10.2
fi
arch=`uname -m`
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "6" ]; then 
centosver=6
else
centosver=7
fi
if [ "$arch" = "x86_64" ]; then
XXX=amd64
else
XXX=x86
fi

###############################################################################
#Download Nginx, VPSSIM & phpMyadmin Version
cd /tmp
rm -rf 00-all-nginx-version.txt
rm -rf vpssim.newversion
rm -rf 00-all-phpmyadmin-version.txt
###########################
download_version_nginx () {
wget -q https://vpssim.com/script/vpssim/00-all-nginx-version.txt
}
download_version_nginx
checkdownload_version_nginx=`cat /tmp/00-all-nginx-version.txt`
if [ -z "$checkdownload_version_nginx" ]; then
download_version_nginx
fi
###########################
download_version_phpmyadmin () {
wget -q https://vpssim.com/script/vpssim/00-all-phpmyadmin-version.txt
}
download_version_phpmyadmin
checkdownload_version_phpmyadmin=`cat /tmp/00-all-phpmyadmin-version.txt`
if [ -z "$checkdownload_version_phpmyadmin" ]; then
download_version_phpmyadmin
fi
###########################
download_version_vpssim () {
wget -q https://vpssim.com/script/vpssim/vpssim.newversion
}
download_version_vpssim
checkdownload_version_vpssim=`cat /tmp/vpssim.newversion`
if [ -z "$checkdownload_version_vpssim" ]; then
download_version_vpssim
fi
###########################
cd
phpmyadmin_version=`cat /tmp/00-all-phpmyadmin-version.txt | awk 'NR==2 {print $1}' | sed 's/|//' | sed 's/|//'`
Nginx_VERSION=`cat /tmp/00-all-nginx-version.txt | awk 'NR==2 {print $1}' | sed 's/|//' | sed 's/|//'`
vpssim_version=`cat /tmp/vpssim.newversion`

# End Download Nginx, VPSSIM & phpMyadmin Version
clear
prompt="Ketik pilihan Anda: "
options=( "Nginx Stable Version" "Nginx Mainline Version")
echo "=========================================================================="
echo "MEMILIH NGINX VERSION: STABLE ATAU MAINLINE: "
echo "=========================================================================="
echo "STABLE: VPSSIM akan menset Nginx dari Nginx Repo."
echo "--------------------------------------------------------------------------"
echo "Ini adalah versi stabil. Proses setup akan lebih cepat."
echo "--------------------------------------------------------------------------"
echo "Setelah setup, Anda tidak bisa mengubah Nginx ke versi lain."
echo "--------------------------------------------------------------------------"
echo "Anda bisa mengupdate Nginx dengan update sistem Centos .."
echo "=========================================================================="
echo "=========================================================================="
echo "MAINLINE: VPSSIM akan mengkompilasi nginx dari sumber nginx."
echo "--------------------------------------------------------------------------"
echo "Ini adalah versi terbaru Nginx, download dari Nginx.org."
echo "--------------------------------------------------------------------------"
echo "Proses setup mungkin lebih lama dari repo tapi kamu bisa mengubah Nginx menjadi"
echo "--------------------------------------------------------------------------"
echo "versi lain setelah setup Dan Anda bisa mengupdate Nginx dari sumbernya."
echo "=========================================================================="
PS3="$prompt"
select opt in "${options[@]}"; do 
    case "$REPLY" in
    1) chonnginx="1"; break;;
    2) chonnginx="0"; break;;          
    *) echo "Anda salah mengetik, ketik nomor ordinal di daftar";continue;;
    esac  
done
if [ "$chonnginx" = "1" ]; then
nginxrepo=1
echo "=========================================================================="
echo "=========================================================================="
echo "Nginx akan menset Nginx dari Nginx repo"; sleep 4
else
nginxrepo=0
clear
echo "=========================================================================="
echo "Nginx akan dikompilasi dari sumber Nginx"; sleep 2
echo "Jika proses nginx kompilasi gagal atau ada promblem"; sleep 4
echo "VPSSIM auto change ke setup nginx stable version dari Nginx Repo"; sleep 5
fi
###############################################################################

clear
echo "=========================================================================="
echo "VPSSIM Akan Mengatur Server Anda Ikuti Informasi di bawah ini:"
echo "=========================================================================="
echo "Email Anda: $vpssimemail"
echo "--------------------------------------------------------------------------"
echo "phpMyAdmin Port: $svport"
echo "--------------------------------------------------------------------------"
echo "phpMyAdmin Version: $phpmyadmin_version"
echo "--------------------------------------------------------------------------"
echo "MariaDB Version: $phienbanmariadb"
echo "--------------------------------------------------------------------------"
echo "Password untuk root MySQL: $passrootmysql"
echo "--------------------------------------------------------------------------"
if [ "$nginxrepo" != "1" ]; then
echo "Nginx Version: $Nginx_VERSION"
else
echo "Nginx Version: Stable Version"
fi
echo "--------------------------------------------------------------------------"
echo "PHP Version: 7.1"
echo "--------------------------------------------------------------------------"
echo "VPSSIM Version: $vpssim_version"
echo "=========================================================================="
prompt="Type in your choice: "
options=( "Setuju" "Tidak Setuju")
PS3="$prompt"
select opt in "${options[@]}"; do 

    case "$REPLY" in
    1) xacnhanthongtin="setuju"; break;;
    2) xacnhanthongtin="tidak"; break;;
    *) echo "Anda salah mengetik, ketik nomor ordinal di daftar";continue;;
    esac  
done

if [ "$xacnhanthongtin" = "setuju" ]; then
echo "--------------------------------------------------------------------------"
echo "Bersiap untuk menyiapkan VPSSIM ..."
sleep 2
else 
clear
rm -rf /root/install && bash /root/vpssim-setup
exit
fi

cat >> "/root/.bash_profile" <<END
IPvpssimcheck="\$(echo \$SSH_CONNECTION | cut -d " " -f 1)"
timeloginvpssimcheck=\$(date +"%e %b %Y, %a %r")
echo 'Someone has IP address '\$IPvpssimcheck' login to $svip on '\$timeloginvpssimcheck'.' | mail -s 'eMail Notifications From VPSSIM On $svip' ${vpssimemail}
END
echo "$svport" > /tmp/priport.txt
arch=`uname -m`
cat > "/etc/yum.repos.d/mariadb.repo" <<END
# MariaDB $phienbanmariadb CentOS repository list
# http://downloads.mariadb.org/mariadb/repositories/
[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/$phienbanmariadb/centos${centosver}-$XXX
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1
END

# Download vpssim_main_menu + Chmod
mkdir -p /etc/vpssim
cd /etc/vpssim
download_vpssim_data () {
rm -rf menu.zip
wget --progress=dot https://vpssim.com/script/vpssim/menu.zip 2>&1 | grep --line-buffered "%"
unzip -q menu.zip
rm -rf menu.zip
}
download_vpssim_data
if [ ! -f /etc/vpssim/menu/inc/check-download-menu ]; then
download_vpssim_data
fi
cd
find /etc/vpssim/menu/inc -type f -exec chmod 755 {} \;
/etc/vpssim/menu/inc/set-permison-vpssim-menu
/etc/vpssim/menu/inc/download-vpssim-main-menu
# Disable And remove unnessery service
/etc/vpssim/menu/inc/disable-remove-service-vpssim-setup
# Check & install remi repo
/etc/vpssim/menu/inc/vpssim-check-and-install-remi-repo

mkdir -p /usr/local/vpssim
groupadd nginx
sudo yum -y groupinstall "Development Tools"
useradd -g nginx -d /dev/null -s /sbin/nologin nginx
#sudo yum -y install gcc gcc-c++ pcre sshpass pcre-devel zlib zlib-devel tar expect imake mailx lsof autoconf nc bind-utils ca-certificates libedit-devel make automake cmake expat-devel perl-libwww-perl perl-Crypt-SSLeay perl-Net-SSLeay tree virt-what openssl-devel libXext-devel glib2 glib2-devel openssl bzip2 bzip2-devel libcurl-devel which libevent libevent-devel libxslt-devel gd gd-devel perl-ExtUtils-Embed patch sysstat libgcj gettext-devel nano libxml2-devel libxml2 libpng-devel freetype freetype-devel libart_lgpl-devel gperftools-devel libicu libicu-devel aspell gmp-devel aspell-devel libtidy libtidy-devel iptables* coreutils libedit-devel enchant enchant-devel pam-devel perl-ExtUtils perl-ExtUtils-MakeMaker perl-Time-HiRes openldap openldap-devel curl curl-devel diffutils libc-client libc-client-devel lsof pkgconfig GeoIP-devel libatomic_ops-devel gperftools 
sudo yum -y install gcc gcc-c++ pcre pcre-devel sshpass zlib zlib-devel tar exim mailx autoconf bind-utils GeoIP GeoIP-devel ca-certificates perl perl-devel perl-ExtUtils-Embed make automake perl-libwww-perl tree virt-what openssl-devel openssl which libxml2-devel libxml2 libxslt libxslt-devel gd gd-devel iptables* openldap openldap-devel curl curl-devel diffutils pkgconfig sudo lsof pkgconfig libatomic_ops-devel gperftools gperftools-devel 
sudo yum -y install unzip zip rsync psmisc syslog-ng-libdbi syslog-ng cronie cronie-anacron

### Cai dat Nginx ##############################################################

if [ "$nginxrepo" != "1" ];then
echo "=========================================================================="
echo "Download Nginx Module ... "
echo "=========================================================================="
cd /usr/local/vpssim
# /usr/local/vpssim/echo-nginx-module
rm -rf echo-nginx-module*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/echo-nginx-module.zip 2>&1 | grep --line-buffered "%"
unzip -oq echo-nginx-module.zip
rm -rf echo-nginx-module.zip
# /usr/local/vpssim/ngx_http_substitutions_filter_module
rm -rf ngx_http_substitutions_filter_module*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/ngx_http_substitutions_filter_module.zip 2>&1 | grep --line-buffered "%"
unzip -oq ngx_http_substitutions_filter_module.zip
rm -rf ngx_http_substitutions_filter_module.zip
# /usr/local/vpssim/ngx_cache_purge-master
rm -rf ngx_cache_purge*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/ngx_cache_purge.zip 2>&1 | grep --line-buffered "%"
unzip -oq ngx_cache_purge.zip
rm -rf ngx_cache_purge.zip
# /usr/local/vpssim/headers-more-nginx-module
rm -rf headers-more-nginx-module*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/headers-more-nginx-module.zip 2>&1 | grep --line-buffered "%"
unzip -oq headers-more-nginx-module.zip
rm -rf headers-more-nginx-module.zip
# /usr/local/vpssim/openssl-1.0.2l
rm -rf ${opensslversion}
wget -q https://vpssim.com/script/vpssim/module-nginx/${opensslversion}.tar.gz 2>&1 | grep --line-buffered "%"
tar -xzxf ${opensslversion}.tar.gz
rm -rf ${opensslversion}.tar.gz
# $moduledir/${zlibversion}
rm -rf ${zlibversion}
wget -q https://vpssim.com/script/vpssim/module-nginx/${zlibversion}.tar.gz 2>&1 | grep --line-buffered "%"
tar -xzxf ${zlibversion}.tar.gz
rm -rf ${zlibversion}.tar.gz
# /usr/local/vpssim/pcre-8.41
rm -rf pcre-8.41
wget -q https://vpssim.com/script/vpssim/module-nginx/pcre-8.41.zip 2>&1 | grep --line-buffered "%"
unzip -oq pcre-8.41.zip
rm -rf pcre-8.41.zip
# /usr/local/vpssim/ngx_http_redis-0.3.8
rm -rf ngx_http_redis-0.3.8
wget -q https://vpssim.com/script/vpssim/module-nginx/ngx_http_redis-0.3.8.tar.gz 2>&1 | grep --line-buffered "%"
tar -xzxf ngx_http_redis-0.3.8.tar.gz
rm -rf ngx_http_redis-0.3.8.tar.gz
# /usr/local/vpssim/redis2-nginx-module
rm -rf redis2-nginx-module*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/redis2-nginx-module.zip 2>&1 | grep --line-buffered "%"
unzip -oq redis2-nginx-module.zip
rm -rf redis2-nginx-module.zip
# /usr/local/vpssim/set-misc-nginx-module
rm -rf set-misc-nginx-module*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/set-misc-nginx-module.zip 2>&1 | grep --line-buffered "%"
unzip -oq set-misc-nginx-module.zip
rm -rf set-misc-nginx-module.zip
# /usr/local/vpssim/ngx_devel_kit
rm -rf ngx_devel_kit*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/ngx_devel_kit.zip 2>&1 | grep --line-buffered "%"
unzip -oq ngx_devel_kit.zip
rm -rf ngx_devel_kit.zip
# /usr/local/vpssim/ngx_http_concat
rm -rf ngx_http_concat
wget -q https://vpssim.com/script/vpssim/module-nginx/ngx_http_concat.tar.gz 2>&1 | grep --line-buffered "%"
tar -xzxf ngx_http_concat.tar.gz
rm -rf ngx_http_concat.tar.gz
# /usr/local/vpssim/srcache-nginx-module
rm -rf srcache-nginx-module*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/srcache-nginx-module.zip 2>&1 | grep --line-buffered "%"
unzip -oq srcache-nginx-module.zip
rm -rf srcache-nginx-module.zip
# /usr/local/vpssim/memc-nginx-module
rm -rf memc-nginx-module*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/memc-nginx-module.zip 2>&1 | grep --line-buffered "%"
unzip -oq memc-nginx-module.zip
rm -rf memc-nginx-module.zip
# /usr/local/vpssim/libatomic_ops-master
rm -rf libatomic_ops*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/libatomic_ops.zip 2>&1 | grep --line-buffered "%"
unzip -oq libatomic_ops.zip
rm -rf libatomic_ops.zip
# /usr/local/vpssim/ngx-fancyindex-master
rm -rf ngx-fancyindex*
wget --progress=dot https://vpssim.com/script/vpssim/module-nginx/ngx-fancyindex.zip 2>&1 | grep --line-buffered "%"
unzip -oq ngx-fancyindex.zip
rm -rf ngx-fancyindex.zip
# /usr/local/vpssim/nginx-module-vts-master
#rm -rf nginx_module_vts*
#wget -q http://vpssim.com/script/vpssim/module-nginx/nginx_module_vts.tar.gz 2>&1 | grep --line-buffered "%"
#tar -xzxf nginx_module_vts.tar.gz
#rm -rf nginx_module_vts.tar.gz
cd
cd /usr/local/vpssim
#cai dat nginx
wget --progress=dot http://nginx.org/download/nginx-${Nginx_VERSION}.tar.gz 2>&1 | grep --line-buffered "%"
tar -xzf nginx-${Nginx_VERSION}.tar.gz
rm -rf /usr/local/vpssim/nginx-${Nginx_VERSION}.tar.gz
cd /usr/local/vpssim/nginx-${Nginx_VERSION}
./configure --prefix=/usr/share/nginx \
--sbin-path=/usr/sbin/nginx \
--group=nginx --user=nginx \
--pid-path=/var/run/nginx.pid \
--conf-path=/etc/nginx/nginx.conf \
--with-http_v2_module \
--with-http_ssl_module \
--with-ipv6 \
--with-http_flv_module \
--with-http_mp4_module \
--with-http_random_index_module \
--with-http_secure_link_module \
--with-http_stub_status_module \
--with-http_sub_module \
--with-http_xslt_module=dynamic \
--with-http_addition_module \
--with-http_dav_module \
--with-http_geoip_module=dynamic \
--with-http_image_filter_module=dynamic \
--with-http_perl_module=dynamic \
--with-mail=dynamic \
--with-mail_ssl_module \
--with-http_gunzip_module \
--with-http_gzip_static_module \
--with-threads \
--with-stream \
--with-stream_ssl_module \
--with-stream_realip_module \
--with-stream_geoip_module=dynamic \
--with-stream_ssl_preread_module \
--with-file-aio \
--with-pcre=$moduledir/pcre-8.41 \
--with-pcre-jit \
--with-google_perftools_module \
--with-debug \
--with-openssl=$moduledir/${opensslversion} \
--with-zlib=$moduledir/${zlibversion} \
--with-openssl-opt="enable-tlsext" \
--with-http_realip_module \
--with-compat \
--http-log-path=/var/log/nginx/access.log \
--with-http_stub_status_module \
--add-dynamic-module=$moduledir/ngx_devel_kit-master \
--add-dynamic-module=$moduledir/echo-nginx-module-master \
--add-dynamic-module=$moduledir/memc-nginx-module-master \
--add-dynamic-module=$moduledir/set-misc-nginx-module-master \
--add-dynamic-module=$moduledir/srcache-nginx-module-master \
--add-module=$moduledir/ngx_http_concat \
--add-dynamic-module=$moduledir/ngx_http_substitutions_filter_module-master \
--add-dynamic-module=$moduledir/ngx_cache_purge-master \
--add-dynamic-module=$moduledir/headers-more-nginx-module-master \
--add-dynamic-module=$moduledir/redis2-nginx-module-master \
--add-dynamic-module=$moduledir/ngx_http_redis-0.3.8 \
--add-dynamic-module=$moduledir/ngx-fancyindex-master
make
make install
else
if [ "$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))" == "6" ]; then 
centosver=6
else
centosver=7
fi
cat > "/etc/yum.repos.d/nginx.repo" <<END
[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/$centosver/\$basearch/
gpgcheck=0
enabled=1
END
yum -y update
yum -y install nginx
fi

######### Het cai dat Nginx ##############################################
if [ ! -d /etc/nginx ]; then
mkdir -p /etc/nginx
fi
#########################################################################
# Download init & config file for nginx
rm -f /etc/init.d/nginx
rm -rf /etc/nginx/nginx.conf
if [ "$nginxrepo" != "1" ];then
cp -r /etc/vpssim/menu/inc/nginx.init/nginx /etc/init.d/nginx
cp -r /etc/vpssim/menu/inc/nginx.init/nginx.conf /etc/nginx/nginx.conf
else
cp -r /etc/vpssim/menu/inc/nginxFrepo/nginx /etc/init.d/nginx
cp -r /etc/vpssim/menu/inc/nginxFrepo/nginx.conf /etc/nginx/nginx.conf
fi
chmod +x /etc/init.d/nginx
chmod +x /usr/sbin/nginx
wget -q https://vpssim.com/script/vpssim/nginx.conf -O /tmp/nginx.conf
rm -rf /tmp/nginx.conf
# Download /etc/nginx/conf
cp -avr /etc/vpssim/menu/inc/conf/ /etc/nginx
#unzip /etc/vpssim/menu/inc/conf.zip -d /etc/nginx/
find /etc/nginx/conf -type f -exec chmod 644 {} \;
# End Download init & config file for nginx
############################
yum -y install MariaDB-server MariaDB-client
yum-config-manager --enable remi-php71
yum -y install php php-common php-fpm php-gd php-devel php-json
yum -y install php-curl php-pecl-zip php-zip php-soap php-cli php-ldap php-mysqlnd php-pear-Net-SMTP php-enchant php-mysql php-pear php-opcache php-pdo php-zlib php-xml php-mbstring php-mcrypt
########### Check qua trinh cai dat Nginx ######################################
if [ "$nginxrepo" != "1" ];then
/etc/vpssim/menu/inc/vpssim-setup-nginx-from-repo
fi
################################################################################

clear
echo "=========================================================================="
echo "Instalasi selesai, mulai konfigurasi ... "
echo "=========================================================================="
sleep 3
	ramformariadb=$(calc $svram/10*6)
	ramforphpnginx=$(calc $svram-$ramformariadb)
	max_children=$(calc $ramforphpnginx/30)
	memory_limit=$(calc $ramforphpnginx/5*3)M
	mem_apc=$(calc $ramforphpnginx/5)M
	buff_size=$(calc $ramformariadb/10*8)M
	log_size=$(calc $ramformariadb/10*2)M

chkconfig --add mysql
chkconfig --levels 235 mysql on
chkconfig --add nginx
chkconfig --levels 235 nginx on
chkconfig --add php-fpm
chkconfig --levels 235 php-fpm on
chkconfig --add exim
chkconfig --levels 235 exim on
chkconfig --add syslog-ng
chkconfig --levels 235 syslog-ng on


mkdir -p /home/vpssim.demo/public_html
mkdir -p /home/vpssim.demo/private_html
mkdir -p /home/vpssim.demo/logs
chmod -R 777 /home/vpssim.demo/logs
cp -r /etc/vpssim/menu/inc/index/index.zip /home/vpssim.demo/public_html/index.html
#chmodlog
mkdir -p /var/log/nginx
chown -R nginx:nginx /var/log/nginx
mkdir -p /var/lib/php/session
chown -R nginx:nginx /var/lib/php/session
chown -R exim:exim /var/spool/exim /var/log/exim

#Vhost for vpssim.demo
rm -rf /etc/nginx/conf.d
mkdir -p /etc/nginx/conf.d
cp -r /etc/vpssim/menu/inc/vhost-sample/vpssim.demo.conf /etc/nginx/conf.d/vpssim.demo.conf
sed -i "s/portbimat/$svport/g" /etc/nginx/conf.d/vpssim.demo.conf


#Config www.conf & php.ini
/etc/vpssim/menu/inc/config-php.ini-www.conf-belong-ram

if [ ! -d /home/0-VPSSIM-SHORTCUT ];then
mkdir -p /home/0-VPSSIM-SHORTCUT
mkdir -p /home/vpssim.demo/private_html/backup
ln -s /home/vpssim.demo/private_html/backup /home/0-VPSSIM-SHORTCUT/Backup\ \(Website\ +\ Database\)
ln -s /etc/nginx/conf.d /home/0-VPSSIM-SHORTCUT/Vhost\ \(Vitual\ Host\)
echo "This is shortcut to Backup ( Code & Database ) and Vitual Host in VPS" > /home/0-VPSSIM-SHORTCUT/readme.txt
echo "Please do not delete it" >>  /home/0-VPSSIM-SHORTCUT/readme.txt
fi
rm -f /etc/php.d/*opcache*
cat > "/etc/php.d/opcache.ini" <<END
zend_extension=opcache.so
opcache.enable=1
opcache.enable_cli=1
opcache.memory_consumption=40
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=3000
opcache.max_wasted_percentage=5
opcache.use_cwd=1
opcache.validate_timestamps=1
opcache.revalidate_freq=60
opcache.fast_shutdown=1
END
rm -f /etc/sysctl.conf
    cat > "/etc/sysctl.conf" <<END
net.ipv4.ip_forward = 0
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
kernel.sysrq = 0
net.ipv4.tcp_synack_retries = 2
kernel.core_uses_pid = 1
net.ipv4.tcp_syncookies = 1
kernel.msgmnb = 65536
kernel.msgmax = 65536
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
kernel.panic = 10
net.core.netdev_max_backlog = 4000
net.ipv4.tcp_max_syn_backlog = 10240
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 1800
vm.swappiness = 10
vm.dirty_ratio = 80
vm.dirty_background_ratio = 10
kernel.core_uses_pid = 0
kernel.core_pattern = /dev/null
fs.suid_dumpable = 0
net.ipv4.tcp_challenge_ack_limit = 999999999
END

rm -f /etc/php-fpm.conf
    cat > "/etc/php-fpm.conf" <<END
include=/etc/php-fpm.d/*.conf

[global]
log_level = warning
pid = /var/run/php-fpm/php-fpm.pid
error_log = /home/vpssim.demo/logs/php-fpm.log
emergency_restart_threshold = 10
emergency_restart_interval = 1m
process_control_timeout = 10s
;events.mechanism = epoll
END

    cat >> "/etc/security/limits.conf" <<END
* soft nofile 65536
* hard nofile 65536
nginx soft nofile 65536
nginx hard nofile 65536
* soft core 0 
* hard core 0
END

ulimit  -n 65536


rm -f /home/vpssim.conf
echo "" > /etc/vpssim/pwprotect.default

    cat > "/home/vpssim.conf" <<END
mainsite="vpssim.demo"
priport="$svport"
serverip="$svip"
mariadbpass="$passrootmysql"
emailmanage="$vpssimemail"
END
rm -rf /etc/vpssim/nginx.version
cat > "/etc/vpssim/nginx.version" <<END
${Nginx_VERSION}
END
cat > "/etc/vpssim/vpssim.version" <<END
${vpssim_version}
END
cat > "/etc/vpssim/phpmyadmin.version" <<END
${phpmyadmin_version}
END

if [ ! "$(grep LANG=en_US.utf-8 /etc/environment)" == "LANG=en_US.utf-8" ]; then
cat > "/etc/environment" <<END
LANG=en_US.utf-8
LC_ALL=en_US.utf-8
END
fi
###
# Config server.cnf
/etc/vpssim/menu/inc/config-server.cnf-belong-ram
/etc/vpssim/menu/inc/set-mysql-chown-log
# Start MySQL
rm -rf /var/lib/mysql/ibdata1
rm -rf /var/lib/mysql/ib_logfile*
service mysql start
#Setup WP-Cli
wget -q https://vpssim.com/script/vpssim/Softwear/wp-cli.phar
chmod +x wp-cli.phar
mv wp-cli.phar /usr/local/bin/wp
#echo "=========================================================================="
#echo "Set Root Password MySQL ... "
#echo "=========================================================================="
/etc/vpssim/menu/inc/mysql-secure-installation
#clear
#echo "=========================================================================="
#echo "Install Phpmyadmin... "
#echo "=========================================================================="
/etc/vpssim/menu/inc/phpmyadmin-download
###
## Edit motd
rm -rf /etc/motd
motdxxx=$(rpm -q --qf "%{VERSION}" $(rpm -q --whatprovides redhat-release))
wget -q https://vpssim.com/script/vpssim/motd$motdxxx -O /etc/motd
###################################################
# Dat mat khau bao ve phpmyadmin, backup files
clear
echo "=========================================================================="
echo "Membuat Username & Password untuk melindungi phpMyadmin, file backup ... "
echo "=========================================================================="
sleep 3
cp -r /etc/vpssim/menu/inc/htpasswd.py /usr/local/bin/htpasswd.py
chmod 755 /usr/local/bin/htpasswd.py
rm -rf /etc/nginx/.htpasswd
matkhaubv=`date |md5sum |cut -c '1-6'`
usernamebv=`echo "${vpssimemail};" | sed 's/\([^@]*\)@\([^;.]*\)\.[^;]*;[ ]*/\1 \2\n/g' | awk 'NR==1 {print $1}'`
if [[ ${#usernamebv} -lt 5 ]]; then
usernamebv=vpssim$ranus
fi
htpasswd.py -c -b /etc/nginx/.htpasswd $usernamebv $matkhaubv
chmod -R 644 /etc/nginx/.htpasswd
cat > "/etc/vpssim/pwprotect.default" <<END
userdefault="$usernamebv"
passdefault="$matkhaubv"
END
cp -r /etc/vpssim/menu/inc/phpsys/status.zip /home/vpssim.demo/public_html/status.php
rm -rf /etc/vpssim/defaulpassword.php
cat > "/etc/vpssim/defaulpassword.php" <<END
<?php
define('ADMIN_USERNAME','$usernamebv');   // Admin Username
define('ADMIN_PASSWORD','$matkhaubv');    // Admin Password
?>
END
sed -i "s/vpssim@vpssim.com/${vpssimemail}/g" /home/vpssim.demo/public_html/status.php
###################################################

if [ -f /etc/sysconfig/iptables ]; then
service iptables start
iptables -I INPUT -p tcp --dport 80 -j ACCEPT
iptables -I INPUT -p tcp --dport 22 -j ACCEPT
iptables -I INPUT -p tcp --dport 21 -j ACCEPT
iptables -I INPUT -p tcp --dport 25 -j ACCEPT
iptables -I INPUT -p tcp --dport 443 -j ACCEPT
iptables -I INPUT -p tcp --dport 465 -j ACCEPT
iptables -I INPUT -p tcp --dport 587 -j ACCEPT
iptables -I INPUT -p tcp --dport $svport -j ACCEPT
iptables -I INPUT -p tcp --dport 11211 -j ACCEPT
service iptables save
fi
clear
echo "=========================================================================="
echo "Setup CSF Firewall Dan Nonaktifkan Ini Secara Default ... "
echo "=========================================================================="
sleep 3
/etc/vpssim/menu/inc/cai-dat-csf-firewall-inc
/etc/vpssim/menu/inc/thong-bao-finished-cai-dat
rm -rf /root/install*
rm -rf /root/vpssim-setup

# increase SSH login speed
if [ -f /etc/ssh/sshd_config ]; then 
sed -i 's/GSSAPIAuthentication yes/GSSAPIAuthentication no/g' /etc/ssh/sshd_config
sed -i 's/#UseDNS yes/UseDNS no/g' /etc/ssh/sshd_config
fi
## Bat nginx & Php-FPM
/etc/vpssim/menu/inc/start-php-fpm-service
/etc/vpssim/menu/inc/start-nginx-service
clear

echo "=========================================================================="
echo "VPSSIM telah menyelesaikan proses instalasi."
echo "=========================================================================="
echo "Perintah untuk memanggil VPSSIM: vpssim"
echo "--------------------------------------------------------------------------"
echo "Link phpMyAdmin: http://$svip:$svport"
echo "--------------------------------------------------------------------------"
echo "Zend Opcache Manage: http://$svip:$svport/ocp.php"
echo "--------------------------------------------------------------------------"
echo "Lihat Status Server: http://$svip/status.php"
echo "--------------------------------------------------------------------------"
echo "Login info for phpMyAdmin, ocp.php, status.php, download backup files ..."
echo "--------------------------------------------------------------------------"
echo "Username: $usernamebv  | Password: $matkhaubv"
echo "--------------------------------------------------------------------------"
echo "Ubah info masuk ini: "
echo "--------------------------------------------------------------------------"
echo "VPSSIM menu ==> Secure Server & Website ==> Default User & Password."
echo "=========================================================================="
echo "Manage info saved in: /home/VPSSIM-manage-info.txt "
echo "=========================================================================="
echo "=========================================================================="
echo ""
echo "Join the VPSSIM community: http://forum.hostingaz.vn"
echo ""
echo "--------------------------------------------------------------------------"
echo "Server akan restart secara otomatis setelah 3 detik ... "
sleep 3
reboot
exit


